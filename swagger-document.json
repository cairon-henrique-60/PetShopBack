{
  "openapi": "3.0.0",
  "paths": {
    "/server/auth/login": {
      "post": {
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/server/auth/register": {
      "post": {
        "operationId": "AuthController_registerAndLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAndLoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/server/user/paginate": {
      "get": {
        "operationId": "UserController_paginateUsers",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The limit of items. If not passed the default limit will be 10",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The Current Page. If not passed the default page will be 1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/server/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    }
  },
  "info": {
    "title": "ikut-backend",
    "description": "",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": ""
    },
    {
      "name": "user",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "AuthUserDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "levis@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterAndLoginDTO": {
        "type": "object",
        "properties": {
          "user_email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "levis@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          },
          "user_name": {
            "type": "string",
            "description": "User Name.",
            "example": "Gu"
          }
        },
        "required": [
          "user_email",
          "password",
          "user_name"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string"
          },
          "hashed_password": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "user_name",
          "hashed_password",
          "user_email",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateUserDTO": {
        "type": "object",
        "properties": {}
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}