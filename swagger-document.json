{
  "openapi": "3.0.0",
  "paths": {
    "/server/auth/login": {
      "post": {
        "operationId": "AuthController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/server/auth/register": {
      "post": {
        "operationId": "AuthController_registerAndLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAndLoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/server/user/paginate": {
      "get": {
        "operationId": "UserController_paginateUsers",
        "parameters": [
          {
            "name": "user_name",
            "required": false,
            "in": "query",
            "description": "Name of the user.",
            "example": "Paulo Salvatore",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_email",
            "required": false,
            "in": "query",
            "description": "Email of the user.",
            "example": "pauloSalvatore@gmail.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initialDate",
            "required": false,
            "in": "query",
            "description": "Initial Date created at of the user.",
            "example": "2024-10-10",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End Date created at of the user.",
            "example": "2024-11-10",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "required": false,
            "in": "query",
            "description": "Cell Phone of the user.",
            "example": 34991324255,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "required": false,
            "in": "query",
            "description": "Type of the user.",
            "example": "ADMIN | COMMOM | COMPANY",
            "schema": {
              "enum": [
                "COMMOM",
                "COMPANY",
                "ADMIN"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The Current Page. If not passed the default page will be 1",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The limit of items. If not passed the default limit will be 10",
            "example": 100,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/server/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/server/user": {
      "get": {
        "operationId": "UserController_list",
        "parameters": [
          {
            "name": "user_name",
            "required": false,
            "in": "query",
            "description": "Name of the user.",
            "example": "Paulo Salvatore",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_email",
            "required": false,
            "in": "query",
            "description": "Email of the user.",
            "example": "pauloSalvatore@gmail.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initialDate",
            "required": false,
            "in": "query",
            "description": "Initial Date created at of the user.",
            "example": "2024-10-10",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End Date created at of the user.",
            "example": "2024-11-10",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "required": false,
            "in": "query",
            "description": "Cell Phone of the user.",
            "example": 34991324255,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "required": false,
            "in": "query",
            "description": "Type of the user.",
            "example": "ADMIN | COMMOM | COMPANY",
            "schema": {
              "enum": [
                "COMMOM",
                "COMPANY",
                "ADMIN"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/server/pet/paginate": {
      "get": {
        "operationId": "PetController_paginatePets",
        "parameters": [
          {
            "name": "pet_name",
            "required": false,
            "in": "query",
            "description": "Name of the pet.",
            "example": "Luna",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pet_breed_id",
            "required": false,
            "in": "query",
            "description": "Breed of the pet.",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pet_gender",
            "required": false,
            "in": "query",
            "description": "Gender of the pet.",
            "example": "Female",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pet_color",
            "required": false,
            "in": "query",
            "description": "Color of the pet.",
            "example": "Golden",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tutor_id",
            "required": false,
            "in": "query",
            "description": "ID of the tutor (owner) of the pet.",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by_created_at",
            "required": false,
            "in": "query",
            "description": "Order by created date.",
            "example": "ASC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by_updated_at",
            "required": false,
            "in": "query",
            "description": "Order by updated date",
            "example": "DESC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The limit of items. If not passed the default limit will be 10",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The Current Page. If not passed the default page will be 1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "pet"
        ]
      }
    },
    "/server/pet/{id}": {
      "get": {
        "operationId": "PetController_getPet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        },
        "tags": [
          "pet"
        ]
      },
      "put": {
        "operationId": "PetController_updatePet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePetDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        },
        "tags": [
          "pet"
        ]
      },
      "delete": {
        "operationId": "PetController_deletePet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        },
        "tags": [
          "pet"
        ]
      }
    },
    "/server/pet": {
      "post": {
        "operationId": "PetController_createPet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePetDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        },
        "tags": [
          "pet"
        ]
      }
    },
    "/server/pet-species": {
      "get": {
        "operationId": "PetSpeciesController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PetSpecies"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "pet-species"
        ]
      },
      "post": {
        "operationId": "PetSpeciesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateSpeciesDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetSpecies"
                }
              }
            }
          }
        },
        "tags": [
          "pet-species"
        ]
      }
    },
    "/server/pet-species/{id}": {
      "put": {
        "operationId": "PetSpeciesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateSpeciesDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetSpecies"
                }
              }
            }
          }
        },
        "tags": [
          "pet-species"
        ]
      },
      "delete": {
        "operationId": "PetSpeciesController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetSpecies"
                }
              }
            }
          }
        },
        "tags": [
          "pet-species"
        ]
      }
    },
    "/server/pet-breed/paginate": {
      "get": {
        "operationId": "PetBreedController_paginateBreeds",
        "parameters": [
          {
            "name": "species_id",
            "required": false,
            "in": "query",
            "description": "Id of the species.",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "breed_name_name",
            "required": false,
            "in": "query",
            "example": "Golden",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by_created_at",
            "required": false,
            "in": "query",
            "description": "Order by created date.",
            "example": "ASC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by_updated_at",
            "required": false,
            "in": "query",
            "description": "Order by updated date",
            "example": "DESC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The limit of items. If not passed the default limit will be 10",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The Current Page. If not passed the default page will be 1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "pet-breed"
        ]
      }
    },
    "/server/pet-breed/{id}": {
      "get": {
        "operationId": "PetBreedController_getPetBreedById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetBreed"
                }
              }
            }
          }
        },
        "tags": [
          "pet-breed"
        ]
      },
      "put": {
        "operationId": "PetBreedController_updateBreed",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePetBreedDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetBreed"
                }
              }
            }
          }
        },
        "tags": [
          "pet-breed"
        ]
      },
      "delete": {
        "operationId": "PetBreedController_deleteBreed",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetBreed"
                }
              }
            }
          }
        },
        "tags": [
          "pet-breed"
        ]
      }
    },
    "/server/pet-breed/breeds-by-species/{species_id}": {
      "get": {
        "operationId": "PetBreedController_getBreedsBySpeciesId",
        "parameters": [
          {
            "name": "species_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "pet-breed"
        ]
      }
    },
    "/server/pet-breed": {
      "post": {
        "operationId": "PetBreedController_createBreed",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePetBreedDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetBreed"
                }
              }
            }
          }
        },
        "tags": [
          "pet-breed"
        ]
      }
    }
  },
  "info": {
    "title": "ikut-backend",
    "description": "",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": ""
    },
    {
      "name": "user",
      "description": ""
    },
    {
      "name": "pet",
      "description": ""
    },
    {
      "name": "pet-species",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "AuthUserDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "levis@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterAndLoginDTO": {
        "type": "object",
        "properties": {
          "user_email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "levis@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          },
          "user_name": {
            "type": "string",
            "description": "User Name.",
            "example": "Gu"
          }
        },
        "required": [
          "user_email",
          "password",
          "user_name"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string"
          },
          "hashed_password": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "user_type": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "pets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "user_name",
          "hashed_password",
          "user_email",
          "user_type",
          "phone_number",
          "pets",
          "id",
          "created_at",
          "updated_at"
        ]
      },
      "PetBreed": {
        "type": "object",
        "properties": {
          "breed_name": {
            "type": "string"
          },
          "species_id": {
            "type": "string"
          },
          "species": {
            "$ref": "#/components/schemas/PetSpecies"
          },
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "breed_name",
          "species_id",
          "species",
          "id",
          "created_at",
          "updated_at"
        ]
      },
      "PetSpecies": {
        "type": "object",
        "properties": {
          "species_name": {
            "type": "string"
          },
          "breeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PetBreed"
            }
          },
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "species_name",
          "breeds",
          "id",
          "created_at",
          "updated_at"
        ]
      },
      "Pet": {
        "type": "object",
        "properties": {
          "pet_name": {
            "type": "string"
          },
          "pet_breed_id": {
            "type": "string"
          },
          "pet_species_id": {
            "type": "string"
          },
          "date_of_birth": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "pet_gender": {
            "type": "string"
          },
          "pet_color": {
            "type": "string"
          },
          "alergies": {
            "type": "string",
            "nullable": true
          },
          "medical_conditions": {
            "type": "string",
            "nullable": true
          },
          "current_medication": {
            "type": "string",
            "nullable": true
          },
          "pet_image_url": {
            "type": "string",
            "nullable": true
          },
          "pet_microship_id": {
            "type": "string"
          },
          "tutor_id": {
            "type": "string"
          },
          "tutor": {
            "$ref": "#/components/schemas/User"
          },
          "pet_species": {
            "$ref": "#/components/schemas/PetSpecies"
          },
          "pet_breed": {
            "$ref": "#/components/schemas/PetBreed"
          },
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "pet_name",
          "pet_breed_id",
          "pet_species_id",
          "date_of_birth",
          "pet_gender",
          "pet_color",
          "alergies",
          "medical_conditions",
          "current_medication",
          "pet_image_url",
          "pet_microship_id",
          "tutor_id",
          "tutor",
          "pet_species",
          "pet_breed",
          "id",
          "created_at",
          "updated_at"
        ]
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "description": "Name of the user."
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "909090"
          },
          "user_email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "pauloSalvatore@gmail.com"
          },
          "phone_number": {
            "type": "string",
            "description": "Cell Phone of the user.",
            "example": 34991324255
          },
          "user_type": {
            "type": "string",
            "description": "Type of the user.",
            "example": "ADMIN | COMMOM | COMPANY",
            "enum": [
              "COMMOM",
              "COMPANY",
              "ADMIN"
            ]
          }
        },
        "required": [
          "user_name",
          "password",
          "user_email",
          "user_type"
        ]
      },
      "UpdateUserDTO": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "example": "Paulo Salvatore"
          },
          "user_email": {
            "type": "string",
            "example": "pauloSalvatore@gmail.com"
          },
          "previous_password": {
            "type": "string",
            "example": "909090"
          },
          "new_password": {
            "type": "string",
            "example": "909090"
          },
          "phone_number": {
            "type": "string",
            "example": "34991324255"
          },
          "user_type": {
            "type": "string",
            "example": "ADMIN | COMMOM | COMPANY"
          }
        },
        "required": [
          "user_name",
          "user_email",
          "previous_password",
          "new_password",
          "phone_number",
          "user_type"
        ]
      },
      "CreatePetDTO": {
        "type": "object",
        "properties": {
          "pet_name": {
            "type": "string",
            "description": "Name of the pet.",
            "example": "Luna"
          },
          "pet_breed_id": {
            "type": "string",
            "description": "Breed of the pet.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "date_of_birth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth of the pet.",
            "example": "2020-01-15"
          },
          "pet_gender": {
            "type": "string",
            "description": "Gender of the pet.",
            "example": "Female"
          },
          "pet_color": {
            "type": "string",
            "description": "Color of the pet.",
            "example": "Golden"
          },
          "alergies": {
            "type": "string",
            "description": "Any allergies the pet may have.",
            "example": "Pollen"
          },
          "medical_conditions": {
            "type": "string",
            "description": "Any medical conditions the pet may have.",
            "example": "Hip dysplasia"
          },
          "current_medication": {
            "type": "string",
            "description": "Current medication the pet is taking.",
            "example": "None"
          },
          "pet_image_url": {
            "type": "string",
            "description": "URL of the pet's image.",
            "example": "https://example.com/pet.jpg"
          },
          "pet_microship_id": {
            "type": "string",
            "description": "Microchip ID of the pet.",
            "example": "A123456789"
          },
          "tutor_id": {
            "type": "string",
            "description": "ID of the tutor (owner) of the pet.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "pet_species_id": {
            "type": "string",
            "description": "ID of the species the pet belongs to.",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          }
        },
        "required": [
          "pet_name",
          "pet_breed_id",
          "pet_gender",
          "pet_color",
          "tutor_id",
          "pet_species_id"
        ]
      },
      "UpdatePetDTO": {
        "type": "object",
        "properties": {
          "pet_name": {
            "type": "string",
            "description": "Name of the pet.",
            "example": "Luna"
          },
          "pet_breed_id": {
            "type": "string",
            "description": "Breed of the pet.",
            "example": "Labrador Retriever"
          },
          "date_of_birth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth of the pet.",
            "example": "2020-01-15"
          },
          "pet_gender": {
            "type": "string",
            "description": "Gender of the pet.",
            "example": "Female"
          },
          "pet_color": {
            "type": "string",
            "description": "Color of the pet.",
            "example": "Golden"
          },
          "alergies": {
            "type": "string",
            "description": "Any allergies the pet may have.",
            "example": "Pollen"
          },
          "medical_conditions": {
            "type": "string",
            "description": "Any medical conditions the pet may have.",
            "example": "Hip dysplasia"
          },
          "current_medication": {
            "type": "string",
            "description": "Current medication the pet is taking.",
            "example": "None"
          },
          "pet_image_url": {
            "type": "string",
            "description": "URL of the pet's image.",
            "example": "https://example.com/pet.jpg"
          },
          "pet_microship_id": {
            "type": "string",
            "description": "Microchip ID of the pet.",
            "example": "A123456789"
          },
          "tutor_id": {
            "type": "string",
            "description": "ID of the tutor (owner) of the pet.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "pet_species_id": {
            "type": "string",
            "description": "ID of the species the pet belongs to.",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          }
        },
        "required": [
          "tutor_id",
          "pet_species_id"
        ]
      },
      "CreateOrUpdateSpeciesDTO": {
        "type": "object",
        "properties": {
          "species_name": {
            "type": "string",
            "description": "Name of the species.",
            "example": "Cachorro"
          }
        },
        "required": [
          "species_name"
        ]
      },
      "CreatePetBreedDTO": {
        "type": "object",
        "properties": {
          "breed_name": {
            "type": "string",
            "description": "Name of the pet."
          },
          "species_id": {
            "type": "string",
            "description": "Id of the species.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "breed_name",
          "species_id"
        ]
      },
      "UpdatePetBreedDTO": {
        "type": "object",
        "properties": {
          "breed_name": {
            "type": "string",
            "description": "Name of the pet.",
            "example": "Golden Retriever"
          },
          "species_id": {
            "type": "string",
            "description": "Name of the pet.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}